/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { FunctionFragment, Result } from "@ethersproject/abi";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  CallOverrides,
  ethers,
  PopulatedTransaction,
  Signer,
} from "ethers";
import type { TypedEvent, TypedEventFilter, TypedListener } from "./common";

interface DarkForestLazyUpdateInterface extends ethers.utils.Interface {
  functions: {
    "applyPendingEvents(uint256,tuple,tuple,tuple[])": FunctionFragment;
    "updatePlanet(uint256,tuple,tuple)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "applyPendingEvents",
    values: [
      BigNumberish,
      {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      {
        id: BigNumberish;
        eventType: BigNumberish;
        timeTrigger: BigNumberish;
        timeAdded: BigNumberish;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updatePlanet",
    values: [
      BigNumberish,
      {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      }
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "applyPendingEvents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updatePlanet",
    data: BytesLike
  ): Result;

  events: {};
}

export class DarkForestLazyUpdate extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: DarkForestLazyUpdateInterface;

  functions: {
    applyPendingEvents(
      currentTimestamp: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      events: {
        id: BigNumberish;
        eventType: BigNumberish;
        timeTrigger: BigNumberish;
        timeAdded: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        },
        [
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        },
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ]
    >;

    updatePlanet(
      updateToTime: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        },
        [
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        }
      ]
    >;
  };

  applyPendingEvents(
    currentTimestamp: BigNumberish,
    planet: {
      owner: string;
      range: BigNumberish;
      speed: BigNumberish;
      defense: BigNumberish;
      population: BigNumberish;
      populationCap: BigNumberish;
      populationGrowth: BigNumberish;
      silverCap: BigNumberish;
      silverGrowth: BigNumberish;
      silver: BigNumberish;
      planetLevel: BigNumberish;
      planetType: BigNumberish;
      isHomePlanet: boolean;
    },
    planetExtendedInfo: {
      isInitialized: boolean;
      createdAt: BigNumberish;
      lastUpdated: BigNumberish;
      perlin: BigNumberish;
      spaceType: BigNumberish;
      upgradeState0: BigNumberish;
      upgradeState1: BigNumberish;
      upgradeState2: BigNumberish;
      hatLevel: BigNumberish;
      hasTriedFindingArtifact: boolean;
      prospectedBlockNumber: BigNumberish;
      destroyed: boolean;
    },
    events: {
      id: BigNumberish;
      eventType: BigNumberish;
      timeTrigger: BigNumberish;
      timeAdded: BigNumberish;
    }[],
    overrides?: CallOverrides
  ): Promise<
    [
      [
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        boolean
      ] & {
        owner: string;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        population: BigNumber;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        silverCap: BigNumber;
        silverGrowth: BigNumber;
        silver: BigNumber;
        planetLevel: BigNumber;
        planetType: number;
        isHomePlanet: boolean;
      },
      [
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        BigNumber,
        boolean
      ] & {
        isInitialized: boolean;
        createdAt: BigNumber;
        lastUpdated: BigNumber;
        perlin: BigNumber;
        spaceType: number;
        upgradeState0: BigNumber;
        upgradeState1: BigNumber;
        upgradeState2: BigNumber;
        hatLevel: BigNumber;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumber;
        destroyed: boolean;
      },
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ]
    ]
  >;

  updatePlanet(
    updateToTime: BigNumberish,
    planet: {
      owner: string;
      range: BigNumberish;
      speed: BigNumberish;
      defense: BigNumberish;
      population: BigNumberish;
      populationCap: BigNumberish;
      populationGrowth: BigNumberish;
      silverCap: BigNumberish;
      silverGrowth: BigNumberish;
      silver: BigNumberish;
      planetLevel: BigNumberish;
      planetType: BigNumberish;
      isHomePlanet: boolean;
    },
    planetExtendedInfo: {
      isInitialized: boolean;
      createdAt: BigNumberish;
      lastUpdated: BigNumberish;
      perlin: BigNumberish;
      spaceType: BigNumberish;
      upgradeState0: BigNumberish;
      upgradeState1: BigNumberish;
      upgradeState2: BigNumberish;
      hatLevel: BigNumberish;
      hasTriedFindingArtifact: boolean;
      prospectedBlockNumber: BigNumberish;
      destroyed: boolean;
    },
    overrides?: CallOverrides
  ): Promise<
    [
      [
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        boolean
      ] & {
        owner: string;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        population: BigNumber;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        silverCap: BigNumber;
        silverGrowth: BigNumber;
        silver: BigNumber;
        planetLevel: BigNumber;
        planetType: number;
        isHomePlanet: boolean;
      },
      [
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        BigNumber,
        boolean
      ] & {
        isInitialized: boolean;
        createdAt: BigNumber;
        lastUpdated: BigNumber;
        perlin: BigNumber;
        spaceType: number;
        upgradeState0: BigNumber;
        upgradeState1: BigNumber;
        upgradeState2: BigNumber;
        hatLevel: BigNumber;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumber;
        destroyed: boolean;
      }
    ]
  >;

  callStatic: {
    applyPendingEvents(
      currentTimestamp: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      events: {
        id: BigNumberish;
        eventType: BigNumberish;
        timeTrigger: BigNumberish;
        timeAdded: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        },
        [
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        },
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ]
    >;

    updatePlanet(
      updateToTime: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        },
        [
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        }
      ]
    >;
  };

  filters: {};

  estimateGas: {
    applyPendingEvents(
      currentTimestamp: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      events: {
        id: BigNumberish;
        eventType: BigNumberish;
        timeTrigger: BigNumberish;
        timeAdded: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updatePlanet(
      updateToTime: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    applyPendingEvents(
      currentTimestamp: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      events: {
        id: BigNumberish;
        eventType: BigNumberish;
        timeTrigger: BigNumberish;
        timeAdded: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updatePlanet(
      updateToTime: BigNumberish,
      planet: {
        owner: string;
        range: BigNumberish;
        speed: BigNumberish;
        defense: BigNumberish;
        population: BigNumberish;
        populationCap: BigNumberish;
        populationGrowth: BigNumberish;
        silverCap: BigNumberish;
        silverGrowth: BigNumberish;
        silver: BigNumberish;
        planetLevel: BigNumberish;
        planetType: BigNumberish;
        isHomePlanet: boolean;
      },
      planetExtendedInfo: {
        isInitialized: boolean;
        createdAt: BigNumberish;
        lastUpdated: BigNumberish;
        perlin: BigNumberish;
        spaceType: BigNumberish;
        upgradeState0: BigNumberish;
        upgradeState1: BigNumberish;
        upgradeState2: BigNumberish;
        hatLevel: BigNumberish;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumberish;
        destroyed: boolean;
      },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
