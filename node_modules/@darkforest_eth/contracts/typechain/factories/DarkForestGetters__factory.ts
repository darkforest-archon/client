/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  DarkForestGetters,
  DarkForestGettersInterface,
} from "../DarkForestGetters";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetArtifacts",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isInitialized",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "planetDiscoveredOn",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactRarity",
                name: "rarity",
                type: "uint8",
              },
              {
                internalType: "enum DarkForestTypes.Biome",
                name: "planetBiome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "mintedAtTimestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "discoverer",
                type: "address",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactType",
                name: "artifactType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "lastActivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastDeactivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "wormholeTo",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Artifact",
            name: "artifact",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "upgrade",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "timeDelayedUpgrade",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "locationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voyageId",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArtifactWithMetadata[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetArtifactsByIds",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isInitialized",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "planetDiscoveredOn",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactRarity",
                name: "rarity",
                type: "uint8",
              },
              {
                internalType: "enum DarkForestTypes.Biome",
                name: "planetBiome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "mintedAtTimestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "discoverer",
                type: "address",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactType",
                name: "artifactType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "lastActivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastDeactivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "wormholeTo",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Artifact",
            name: "artifact",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "upgrade",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "timeDelayedUpgrade",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "locationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voyageId",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArtifactWithMetadata[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetPlanetArrivals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "popArriving",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "departureTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "arrivalTime",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.ArrivalType",
            name: "arrivalType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "carriedArtifactId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArrivalData[][]",
        name: "",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetPlanetArrivalsByIds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "popArriving",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "departureTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "arrivalTime",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.ArrivalType",
            name: "arrivalType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "carriedArtifactId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArrivalData[][]",
        name: "",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "planetIds",
        type: "uint256[]",
      },
    ],
    name: "bulkGetPlanetArtifacts",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isInitialized",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "planetDiscoveredOn",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactRarity",
                name: "rarity",
                type: "uint8",
              },
              {
                internalType: "enum DarkForestTypes.Biome",
                name: "planetBiome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "mintedAtTimestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "discoverer",
                type: "address",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactType",
                name: "artifactType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "lastActivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastDeactivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "wormholeTo",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Artifact",
            name: "artifact",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "upgrade",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "timeDelayedUpgrade",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "locationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voyageId",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArtifactWithMetadata[][]",
        name: "",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetPlanetIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "ret",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetPlanets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "range",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defense",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "population",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "populationCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "populationGrowth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverGrowth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silver",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "planetLevel",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.PlanetType",
            name: "planetType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isHomePlanet",
            type: "bool",
          },
        ],
        internalType: "struct DarkForestTypes.Planet[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetPlanetsByIds",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "range",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defense",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "population",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "populationCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "populationGrowth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverGrowth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silver",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "planetLevel",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.PlanetType",
            name: "planetType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isHomePlanet",
            type: "bool",
          },
        ],
        internalType: "struct DarkForestTypes.Planet[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetPlanetsDataByIds",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "range",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defense",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "population",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "populationCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "populationGrowth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "silverCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "silverGrowth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "silver",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "planetLevel",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.PlanetType",
                name: "planetType",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "isHomePlanet",
                type: "bool",
              },
            ],
            internalType: "struct DarkForestTypes.Planet",
            name: "planet",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isInitialized",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "perlin",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.SpaceType",
                name: "spaceType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "upgradeState0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upgradeState1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upgradeState2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "hatLevel",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "hasTriedFindingArtifact",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "prospectedBlockNumber",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "destroyed",
                type: "bool",
              },
            ],
            internalType: "struct DarkForestTypes.PlanetExtendedInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "locationId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "revealer",
                type: "address",
              },
            ],
            internalType: "struct DarkForestTypes.RevealedCoords",
            name: "revealedCoords",
            type: "tuple",
          },
        ],
        internalType: "struct DarkForestTypes.PlanetData[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetPlanetsExtendedInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.SpaceType",
            name: "spaceType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "upgradeState0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upgradeState1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upgradeState2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hatLevel",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasTriedFindingArtifact",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "prospectedBlockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "destroyed",
            type: "bool",
          },
        ],
        internalType: "struct DarkForestTypes.PlanetExtendedInfo[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetPlanetsExtendedInfoByIds",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.SpaceType",
            name: "spaceType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "upgradeState0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upgradeState1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upgradeState2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hatLevel",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasTriedFindingArtifact",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "prospectedBlockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "destroyed",
            type: "bool",
          },
        ],
        internalType: "struct DarkForestTypes.PlanetExtendedInfo[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetPlayerIds",
    outputs: [
      {
        internalType: "address[]",
        name: "ret",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetPlayers",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homePlanetId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRevealTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.Player[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetRevealedCoordsByIds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "revealer",
            type: "address",
          },
        ],
        internalType: "struct DarkForestTypes.RevealedCoords[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetRevealedPlanetIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "ret",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "bulkGetVoyagesByIds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "popArriving",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "departureTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "arrivalTime",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.ArrivalType",
            name: "arrivalType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "carriedArtifactId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArrivalData[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "doesArtifactExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "artifactId",
        type: "uint256",
      },
    ],
    name: "getArtifactById",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isInitialized",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "planetDiscoveredOn",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactRarity",
                name: "rarity",
                type: "uint8",
              },
              {
                internalType: "enum DarkForestTypes.Biome",
                name: "planetBiome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "mintedAtTimestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "discoverer",
                type: "address",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactType",
                name: "artifactType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "lastActivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastDeactivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "wormholeTo",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Artifact",
            name: "artifact",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "upgrade",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "timeDelayedUpgrade",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "locationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voyageId",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArtifactWithMetadata",
        name: "ret",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "locationId",
        type: "uint256",
      },
    ],
    name: "getArtifactsOnPlanet",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isInitialized",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "planetDiscoveredOn",
                type: "uint256",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactRarity",
                name: "rarity",
                type: "uint8",
              },
              {
                internalType: "enum DarkForestTypes.Biome",
                name: "planetBiome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "mintedAtTimestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "discoverer",
                type: "address",
              },
              {
                internalType: "enum DarkForestTypes.ArtifactType",
                name: "artifactType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "lastActivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastDeactivated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "wormholeTo",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Artifact",
            name: "artifact",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "upgrade",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "popCapMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "popGroMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rangeMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "speedMultiplier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defMultiplier",
                type: "uint256",
              },
            ],
            internalType: "struct DarkForestTypes.Upgrade",
            name: "timeDelayedUpgrade",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "locationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voyageId",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArtifactWithMetadata[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultStats",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "label",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "populationCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "populationGrowth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "range",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defense",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverGrowth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "barbarianPercentage",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.PlanetDefaultStats[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_location",
        type: "uint256",
      },
    ],
    name: "getPlanetArrivals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toPlanet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "popArriving",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "silverMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "departureTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "arrivalTime",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.ArrivalType",
            name: "arrivalType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "carriedArtifactId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.ArrivalData[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "locationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getPlanetEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum DarkForestTypes.PlanetEventType",
            name: "eventType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timeTrigger",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
        ],
        internalType: "struct DarkForestTypes.PlanetEventMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerId",
        type: "address",
      },
    ],
    name: "getPlayerArtifactIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adminAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_coreContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokensAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613f96806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806390960189116100c3578063dacb61351161007c578063dacb61351461035f578063e654848a14610372578063ec935da214610385578063f6d5775a14610398578063f9231d92146103b8578063fa37ca45146103d857600080fd5b806390960189146102c4578063975de613146102e457806398f94a8e14610304578063aaca42e914610317578063c0c53b8b1461032a578063dac40ae71461033f57600080fd5b806345510f221161011557806345510f221461021157806346d7789d1461023157806354113a1e146102515780636c7ffeec14610271578063745297cc1461029157806378622ae6146102b157600080fd5b806304d74a391461015d57806308d2e95a146101865780631f94f5401461019b578063314d1ff7146101be5780633f9d7c49146101de57806340a72788146101fe575b600080fd5b61017061016b366004612c1d565b6103eb565b60405161017d9190612cfe565b60405180910390f35b61018e610569565b60405161017d9190612da5565b6101ae6101a9366004612e64565b6107a5565b604051901515815260200161017d565b6101d16101cc366004612e95565b610818565b60405161017d9190612eb2565b6101f16101ec366004612eea565b61088b565b60405161017d9190613016565b6101f161020c366004612c1d565b610941565b61022461021f366004612eea565b610a4e565b60405161017d9190613153565b61024461023f366004612eea565b610c9c565b60405161017d91906131cb565b61026461025f366004612eea565b610db6565b60405161017d91906133a1565b61028461027f366004612c1d565b610edf565b60405161017d91906133f6565b6102a461029f366004612eea565b61109a565b60405161017d919061346c565b6101706102bf366004612eea565b6111b5565b6102d76102d2366004612e64565b6112d0565b60405161017d919061347f565b6102f76102f2366004612c1d565b611403565b60405161017d9190613492565b6102f7610312366004612eea565b61157a565b6101d1610325366004612c1d565b611695565b61033d6103383660046134d5565b611793565b005b61035261034d366004612c1d565b61189e565b60405161017d9190613520565b6102a461036d366004612e64565b611921565b6102d761038036600461367b565b611be4565b6102d7610393366004612c1d565b611ff4565b6103ab6103a6366004612c1d565b6123ef565b60405161017d9190613716565b6103cb6103c6366004612e64565b6124fa565b60405161017d9190613757565b6101d16103e6366004612c1d565b612861565b60606103f7838361377c565b6001600160401b0381111561040e5761040e61355f565b60405190808252806020026020018201604052801561044757816020015b61043461295f565b81526020019060019003908161042c5790505b509050825b828110156105625760015460405163ad48909160e01b8152600481018390526001600160a01b039091169063ccf738e990829063ad48909190602401602060405180830381865afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c99190613793565b6040518263ffffffff1660e01b81526004016104e791815260200190565b61018060405180830381865afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052991906137d0565b82610534868461377c565b8151811061054457610544613885565b6020026020010181905250808061055a9061389b565b91505061044c565b5092915050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663fb9b90c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190613793565b6001600160401b038111156105fb576105fb61355f565b60405190808252806020026020018201604052801561067b57816020015b6106686040518061012001604052806060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816106195790505b50905060005b600160009054906101000a90046001600160a01b03166001600160a01b031663fb9b90c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f89190613793565b81101561079f57600154604051632d55279960e21b8152600481018390526001600160a01b039091169063b5549e6490602401600060405180830381865afa158015610748573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107709190810190613925565b82828151811061078257610782613885565b60209081029190910101526107986001826139e8565b9050610681565b50919050565b600254604051627e53d560e61b8152600481018390526000916001600160a01b031690631f94f54090602401602060405180830381865afa1580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190613a00565b92915050565b60025460405163314d1ff760e01b81526001600160a01b038381166004830152606092169063314d1ff790602401600060405180830381865afa158015610863573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108129190810190613a1b565b60606000826001600160401b038111156108a7576108a761355f565b6040519080825280602002602001820160405280156108da57816020015b60608152602001906001900390816108c55790505b50905060005b83811015610939576109098585838181106108fd576108fd613885565b90506020020135611921565b82828151811061091b5761091b613885565b602002602001018190525080806109319061389b565b9150506108e0565b509392505050565b6060600061094f848461377c565b6001600160401b038111156109665761096661355f565b60405190808252806020026020018201604052801561099957816020015b60608152602001906001900390816109845790505b509050835b838110156109395760015460405163ad48909160e01b815260048101839052610a15916001600160a01b03169063ad48909190602401602060405180830381865afa1580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036d9190613793565b82610a20878461377c565b81518110610a3057610a30613885565b60200260200101819052508080610a469061389b565b91505061099e565b6060816001600160401b03811115610a6857610a6861355f565b604051908082528060200260200182016040528015610aa157816020015b610a8e6129d7565b815260200190600190039081610a865790505b50905060005b8281101561056257604080516060810190915260015481906001600160a01b03166326c1e750878786818110610adf57610adf613885565b905060200201356040518263ffffffff1660e01b8152600401610b0491815260200190565b6101a060405180830381865afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190613ac5565b81526001546020909101906001600160a01b031663ccf738e9878786818110610b7157610b71613885565b905060200201356040518263ffffffff1660e01b8152600401610b9691815260200190565b61018060405180830381865afa158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd891906137d0565b81526001546020909101906001600160a01b031663edb7ffe4878786818110610c0357610c03613885565b905060200201356040518263ffffffff1660e01b8152600401610c2891815260200190565b608060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c699190613b75565b815250828281518110610c7e57610c7e613885565b60200260200101819052508080610c949061389b565b915050610aa7565b6060816001600160401b03811115610cb657610cb661355f565b604051908082528060200260200182016040528015610cef57816020015b610cdc612a09565b815260200190600190039081610cd45790505b50905060005b82811015610562576001546001600160a01b0316630e1d2115858584818110610d2057610d20613885565b905060200201356040518263ffffffff1660e01b8152600401610d4591815260200190565b608060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d869190613b75565b828281518110610d9857610d98613885565b60200260200101819052508080610dae9061389b565b915050610cf5565b60606000826001600160401b03811115610dd257610dd261355f565b604051908082528060200260200182016040528015610e0557816020015b6060815260200190600190039081610df05790505b50905060005b83811015610939576001546000906001600160a01b031663d3a3f551878785818110610e3957610e39613885565b905060200201356040518263ffffffff1660e01b8152600401610e5e91815260200190565b600060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ea39190810190613a1b565b9050610eae81611be4565b838381518110610ec057610ec0613885565b6020026020010181905250508080610ed79061389b565b915050610e0b565b6060610eeb838361377c565b6001600160401b03811115610f0257610f0261355f565b604051908082528060200260200182016040528015610f7757816020015b610f646040518060c0016040528060001515815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081610f205790505b509050825b8281101561056257600154604051636009588960e11b8152600481018390526001600160a01b039091169063e2eb41ff90829063c012b11290602401602060405180830381865afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff99190613bc5565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160c060405180830381865afa15801561103d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110619190613be2565b8261106c868461377c565b8151811061107c5761107c613885565b602002602001018190525080806110929061389b565b915050610f7c565b6060816001600160401b038111156110b4576110b461355f565b6040519080825280602002602001820160405280156110ed57816020015b6110da612a3a565b8152602001906001900390816110d25790505b50905060005b82811015610562576001546001600160a01b03166376af38b485858481811061111e5761111e613885565b905060200201356040518263ffffffff1660e01b815260040161114391815260200190565b61016060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613c6b565b82828151811061119757611197613885565b602002602001018190525080806111ad9061389b565b9150506110f3565b6060816001600160401b038111156111cf576111cf61355f565b60405190808252806020026020018201604052801561120857816020015b6111f561295f565b8152602001906001900390816111ed5790505b50905060005b82811015610562576001546001600160a01b031663ccf738e985858481811061123957611239613885565b905060200201356040518263ffffffff1660e01b815260040161125e91815260200190565b61018060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a091906137d0565b8282815181106112b2576112b2613885565b602002602001018190525080806112c89061389b565b91505061120e565b60015460405163d3a3f55160e01b8152600481018390526060916000916001600160a01b039091169063d3a3f55190602401600060405180830381865afa15801561131f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113479190810190613a1b565b905080516001600160401b038111156113625761136261355f565b60405190808252806020026020018201604052801561139b57816020015b611388612aae565b8152602001906001900390816113805790505b50915060005b81518110156113fc576113cc8282815181106113bf576113bf613885565b60200260200101516124fa565b8382815181106113de576113de613885565b602002602001018190525080806113f49061389b565b9150506113a1565b5050919050565b606061140f838361377c565b6001600160401b038111156114265761142661355f565b60405190808252806020026020018201604052801561145f57816020015b61144c612b52565b8152602001906001900390816114445790505b509050825b828110156105625760015460405163ad48909160e01b8152600481018390526001600160a01b03909116906326c1e75090829063ad48909190602401602060405180830381865afa1580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190613793565b6040518263ffffffff1660e01b81526004016114ff91815260200190565b6101a060405180830381865afa15801561151d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115419190613ac5565b8261154c868461377c565b8151811061155c5761155c613885565b602002602001018190525080806115729061389b565b915050611464565b6060816001600160401b038111156115945761159461355f565b6040519080825280602002602001820160405280156115cd57816020015b6115ba612b52565b8152602001906001900390816115b25790505b50905060005b82811015610562576001546001600160a01b03166326c1e7508585848181106115fe576115fe613885565b905060200201356040518263ffffffff1660e01b815260040161162391815260200190565b6101a060405180830381865afa158015611641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116659190613ac5565b82828151811061167757611677613885565b6020026020010181905250808061168d9061389b565b9150506115d3565b60606116a1838361377c565b6001600160401b038111156116b8576116b861355f565b6040519080825280602002602001820160405280156116e1578160200160208202803683370190505b509050825b828110156105625760015460405163ad48909160e01b8152600481018390526001600160a01b039091169063ad48909190602401602060405180830381865afa158015611737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175b9190613793565b82611766868461377c565b8151811061177657611776613885565b60209081029190910101528061178b8161389b565b9150506116e6565b600054610100900460ff16806117ac575060005460ff16155b6118135760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015611835576000805461ffff19166101011790555b600080546001600160a01b03808716620100000262010000600160b01b031990921691909117909155600180548583166001600160a01b03199182161790915560028054928516929091169190911790558015611898576000805461ff00191690555b50505050565b6118a6612bd4565b60015460405163dac40ae760e01b815260048101859052602481018490526001600160a01b039091169063dac40ae790604401608060405180830381865afa1580156118f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191a9190613d08565b9392505050565b60606000805b600154604051633ee52a9160e01b8152600481018690526001600160a01b0390911690633ee52a9190602401602060405180830381865afa158015611970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119949190613793565b8110156119df5760006119a7858361189e565b6020015180156119b9576119b9612c3f565b14156119cd576119ca6001836139e8565b91505b6119d86001826139e8565b9050611927565b50806001600160401b038111156119f8576119f861355f565b604051908082528060200260200182016040528015611a3157816020015b611a1e612a3a565b815260200190600190039081611a165790505b50915060005b600154604051633ee52a9160e01b8152600481018690526001600160a01b0390911690633ee52a9190602401602060405180830381865afa158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa49190613793565b8110156113fc5760015460405163dac40ae760e01b815260048101869052602481018390526000916001600160a01b03169063dac40ae790604401608060405180830381865afa158015611afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b209190613d08565b9050600060208201518015611b3757611b37612c3f565b1415611bd1576001548151604051630a560ff760e31b81526001600160a01b03909216916352b07fb891611b719160040190815260200190565b61016060405180830381865afa158015611b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb39190613c6b565b848381518110611bc557611bc5613885565b60200260200101819052505b50611bdd6001826139e8565b9050611a37565b606081516001600160401b03811115611bff57611bff61355f565b604051908082528060200260200182016040528015611c3857816020015b611c25612aae565b815260200190600190039081611c1d5790505b50905060005b825181101561079f5760025483516000916001600160a01b031690638465ad4490869085908110611c7157611c71613885565b60200260200101516040518263ffffffff1660e01b8152600401611c9791815260200190565b61016060405180830381865afa158015611cb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd99190613d8b565b60025460208201516040516331a9108f60e11b81529293506000926001600160a01b0390921691636352211e91611d169160040190815260200190565b602060405180830381865afa925050508015611d4f575060408051601f3d908101601f19168201909252611d4c91810190613bc5565b60015b611db957611d5b613e3d565b806308c379a01415611d815750611d70613e59565b80611d7b5750611d83565b50611dbc565b505b3d808015611dad576040519150601f19603f3d011682016040523d82523d6000602084013e611db2565b606091505b5050611dbc565b90505b6040518060c0016040528083815260200173__$773590d194ef7af6149f5cd9ccb8db3ce0$__63b8ed95c4856040518263ffffffff1660e01b8152600401611e049190613ee2565b60a060405180830381865af4158015611e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e459190613ef1565b815260200173__$773590d194ef7af6149f5cd9ccb8db3ce0$__6318a95a5f856040518263ffffffff1660e01b8152600401611e819190613ee2565b60a060405180830381865af4158015611e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec29190613ef1565b81526001600160a01b03838116602080840191909152600154908601516040805163da40b31160e01b815260048101929092529093019291169063da40b31190602401602060405180830381865afa158015611f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f469190613793565b8152600154602085810151604051630d1cb8e360e11b815260048101919091529201916001600160a01b0390911690631a3971c690602401602060405180830381865afa158015611f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbf9190613793565b815250848481518110611fd457611fd4613885565b602002602001018190525050508080611fec9061389b565b915050611c3e565b6060612000838361377c565b6001600160401b038111156120175761201761355f565b60405190808252806020026020018201604052801561205057816020015b61203d612aae565b8152602001906001900390816120355790505b509050825b8281101561056257600254604051630be72d8360e01b8152600481018390526000916001600160a01b031690630be72d839060240161016060405180830381865afa1580156120a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120cc9190613d8b565b60025460208201516040516331a9108f60e11b81529293506000926001600160a01b0390921691636352211e916121099160040190815260200190565b602060405180830381865afa925050508015612142575060408051601f3d908101601f1916820190925261213f91810190613bc5565b60015b6121ac5761214e613e3d565b806308c379a014156121745750612163613e59565b8061216e5750612176565b506121af565b505b3d8080156121a0576040519150601f19603f3d011682016040523d82523d6000602084013e6121a5565b606091505b50506121af565b90505b6040518060c0016040528083815260200173__$773590d194ef7af6149f5cd9ccb8db3ce0$__63b8ed95c4856040518263ffffffff1660e01b81526004016121f79190613ee2565b60a060405180830381865af4158015612214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122389190613ef1565b815260200173__$773590d194ef7af6149f5cd9ccb8db3ce0$__6318a95a5f856040518263ffffffff1660e01b81526004016122749190613ee2565b60a060405180830381865af4158015612291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b59190613ef1565b81526001600160a01b03838116602080840191909152600154908601516040805163da40b31160e01b815260048101929092529093019291169063da40b31190602401602060405180830381865afa158015612315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123399190613793565b8152600154602085810151604051630d1cb8e360e11b815260048101919091529201916001600160a01b0390911690631a3971c690602401602060405180830381865afa15801561238e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b29190613793565b9052846123bf888661377c565b815181106123cf576123cf613885565b6020026020010181905250505080806123e79061389b565b915050612055565b60606123fb838361377c565b6001600160401b038111156124125761241261355f565b60405190808252806020026020018201604052801561243b578160200160208202803683370190505b509050825b8281101561056257600154604051636009588960e11b8152600481018390526001600160a01b039091169063c012b11290602401602060405180830381865afa158015612491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124b59190613bc5565b826124c0868461377c565b815181106124d0576124d0613885565b6001600160a01b0390921660209283029190910190910152806124f28161389b565b915050612440565b612502612aae565b6002546040516321196b5160e21b8152600481018490526000916001600160a01b031690638465ad449060240161016060405180830381865afa15801561254d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125719190613d8b565b60025460208201516040516331a9108f60e11b81529293506000926001600160a01b0390921691636352211e916125ae9160040190815260200190565b602060405180830381865afa9250505080156125e7575060408051601f3d908101601f191682019092526125e491810190613bc5565b60015b612651576125f3613e3d565b806308c379a014156126195750612608613e59565b80612613575061261b565b50612654565b505b3d808015612645576040519150601f19603f3d011682016040523d82523d6000602084013e61264a565b606091505b5050612654565b90505b6040518060c0016040528083815260200173__$773590d194ef7af6149f5cd9ccb8db3ce0$__63b8ed95c4856040518263ffffffff1660e01b815260040161269c9190613ee2565b60a060405180830381865af41580156126b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126dd9190613ef1565b815260200173__$773590d194ef7af6149f5cd9ccb8db3ce0$__6318a95a5f856040518263ffffffff1660e01b81526004016127199190613ee2565b60a060405180830381865af4158015612736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275a9190613ef1565b81526001600160a01b03838116602080840191909152600154908601516040805163da40b31160e01b815260048101929092529093019291169063da40b31190602401602060405180830381865afa1580156127ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127de9190613793565b8152600154602085810151604051630d1cb8e360e11b815260048101919091529201916001600160a01b0390911690631a3971c690602401602060405180830381865afa158015612833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128579190613793565b9052949350505050565b606061286d838361377c565b6001600160401b038111156128845761288461355f565b6040519080825280602002602001820160405280156128ad578160200160208202803683370190505b509050825b828110156105625760015460405163154d8d1960e11b8152600481018390526001600160a01b0390911690632a9b1a3290602401602060405180830381865afa158015612903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129279190613793565b82612932868461377c565b8151811061294257612942613885565b6020908102919091010152806129578161389b565b9150506128b2565b6040518061018001604052806000151581526020016000815260200160008152602001600081526020016000600381111561299c5761299c612c3f565b815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000151581525090565b60405180606001604052806129ea612b52565b81526020016129f761295f565b8152602001612a04612a09565b905290565b604051806080016040528060008152602001600081526020016000815260200160006001600160a01b031681525090565b6040518061016001604052806000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006003811115612a9a57612a9a612c3f565b815260200160008152602001600081525090565b604080516102208101909152600060c0820181815260e08301829052610100830182905261012083018290526101408301829052610160830182905261018083018290526101a083018290526101c083018290526101e08301829052610200830191909152815260208101612b21612bee565b8152602001612b2e612bee565b815260200160006001600160a01b0316815260200160008152602001600081525090565b604051806101a0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006004811115612bc757612bc7612c3f565b8152600060209091015290565b604080516080810190915260008082526020820190612a9a565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60008060408385031215612c3057600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60048110612c6557612c65612c3f565b9052565b8051151582526020810151602083015260408101516040830152606081015160608301526080810151612c9f6080840182612c55565b5060a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151612cde8285018215159052565b505061014081810151908301526101608082015180151582850152611898565b6020808252825182820181905260009190848201906040850190845b81811015612d4157612d2d838551612c69565b928401926101809290920191600101612d1a565b50909695505050505050565b60005b83811015612d68578181015183820152602001612d50565b838111156118985750506000910152565b60008151808452612d91816020860160208601612d4d565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612e5657603f1989840301855281516101208151818652612df382870182612d79565b838b0151878c0152898401518a880152606080850151908801526080808501519088015260a0808501519088015260c0808501519088015260e0808501519088015261010093840151939096019290925250509386019390860190600101612dcc565b509098975050505050505050565b600060208284031215612e7657600080fd5b5035919050565b6001600160a01b0381168114612e9257600080fd5b50565b600060208284031215612ea757600080fd5b813561191a81612e7d565b6020808252825182820181905260009190848201906040850190845b81811015612d4157835183529284019291840191600101612ece565b60008060208385031215612efd57600080fd5b82356001600160401b0380821115612f1457600080fd5b818501915085601f830112612f2857600080fd5b813581811115612f3757600080fd5b8660208260051b8501011115612f4c57600080fd5b60209290920196919550909350505050565b600081518084526020808501945080840160005b8381101561300b57815180518852838101516001600160a01b03168489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0808201519089015260e0808201519089015261010080820151612fe0828b0182612c55565b5050610120818101519089015261014090810151908801526101609096019590820190600101612f72565b509495945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561306b57603f19888603018452613059858351612f5e565b9450928501929085019060010161303d565b5092979650505050505050565b60058110612c6557612c65612c3f565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015161311282850182613078565b50506101808181015180151584830152611898565b8051825260208082015190830152604080820151908301526060908101516001600160a01b0316910152565b602080825282518282018190526000919060409081850190868401855b828110156131be578151613185858251613088565b868101516131976101a0870182612c69565b508501516131a9610320860182613127565b506103a0939093019290850190600101613170565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612d41576131fa838551613127565b92840192608092909201916001016131e7565b60068110612c6557612c65612c3f565b600b8110612c6557612c65612c3f565b600a8110612c6557612c65612c3f565b80511515825260208101516020830152604081015160408301526060810151613269606084018261320d565b50608081015161327c608084018261321d565b5060a081015160a083015260c08101516132a160c08401826001600160a01b03169052565b5060e08101516132b460e084018261322d565b506101008181015190830152610120808201519083015261014090810151910152565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b61331282825161323d565b60208101516133256101608401826132d7565b5060408101516133396102008401826132d7565b5060608101516001600160a01b03166102a083015260808101516102c083015260a001516102e090910152565b600081518084526020808501945080840160005b8381101561300b5761338d878351613307565b61030096909601959082019060010161337a565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561306b57603f198886030184526133e4858351613366565b945092850192908501906001016133c8565b602080825282518282018190526000919060409081850190868401855b828110156131be578151805115158552868101516001600160a01b0316878601528581015186860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101613413565b60208152600061191a6020830184612f5e565b60208152600061191a6020830184613366565b6020808252825182820181905260009190848201906040850190845b81811015612d41576134c1838551613088565b928401926101a092909201916001016134ae565b6000806000606084860312156134ea57600080fd5b83356134f581612e7d565b9250602084013561350581612e7d565b9150604084013561351581612e7d565b809150509250925092565b81518152602082015160808201906001811061353e5761353e612c3f565b80602084015250604083015160408301526060830151606083015292915050565b634e487b7160e01b600052604160045260246000fd5b608081018181106001600160401b03821117156135945761359461355f565b60405250565b601f8201601f191681016001600160401b03811182821017156135bf576135bf61355f565b6040525050565b60405161018081016001600160401b03811182821017156135e9576135e961355f565b60405290565b60405161012081016001600160401b03811182821017156135e9576135e961355f565b6040516101a081016001600160401b03811182821017156135e9576135e961355f565b60405161016081016001600160401b03811182821017156135e9576135e961355f565b60006001600160401b038211156136715761367161355f565b5060051b60200190565b6000602080838503121561368e57600080fd5b82356001600160401b038111156136a457600080fd5b8301601f810185136136b557600080fd5b80356136c081613658565b6040516136cd828261359a565b82815260059290921b83018401918481019150878311156136ed57600080fd5b928401925b8284101561370b578335825292840192908401906136f2565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612d415783516001600160a01b031683529284019291840191600101613732565b61030081016108128284613307565b634e487b7160e01b600052601160045260246000fd5b60008282101561378e5761378e613766565b500390565b6000602082840312156137a557600080fd5b5051919050565b805180151581146137bc57600080fd5b919050565b8051600481106137bc57600080fd5b600061018082840312156137e357600080fd5b6137eb6135c6565b6137f4836137ac565b8152602083015160208201526040830151604082015260608301516060820152613820608084016137c1565b608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012061385d8185016137ac565b90820152610140838101519082015261016061387a8185016137ac565b908201529392505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156138af576138af613766565b5060010190565b600082601f8301126138c757600080fd5b81516001600160401b038111156138e0576138e061355f565b6040516138f7601f8301601f19166020018261359a565b81815284602083860101111561390c57600080fd5b61391d826020830160208701612d4d565b949350505050565b60006020828403121561393757600080fd5b81516001600160401b038082111561394e57600080fd5b90830190610120828603121561396357600080fd5b61396b6135ef565b82518281111561397a57600080fd5b613986878286016138b6565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101009150818301518282015280935050505092915050565b600082198211156139fb576139fb613766565b500190565b600060208284031215613a1257600080fd5b61191a826137ac565b60006020808385031215613a2e57600080fd5b82516001600160401b03811115613a4457600080fd5b8301601f81018513613a5557600080fd5b8051613a6081613658565b604051613a6d828261359a565b82815260059290921b8301840191848101915087831115613a8d57600080fd5b928401925b8284101561370b57835182529284019290840190613a92565b80516137bc81612e7d565b8051600581106137bc57600080fd5b60006101a08284031215613ad857600080fd5b613ae0613612565b613ae983613aab565b81526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120808401518183015250610140808401518183015250610160613b63818501613ab6565b9082015261018061387a8482016137ac565b600060808284031215613b8757600080fd5b604051613b9381613575565b8251815260208301516020820152604083015160408201526060830151613bb981612e7d565b60608201529392505050565b600060208284031215613bd757600080fd5b815161191a81612e7d565b600060c08284031215613bf457600080fd5b60405160c081018181106001600160401b0382111715613c1657613c1661355f565b604052613c22836137ac565b81526020830151613c3281612e7d565b8060208301525060408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b60006101608284031215613c7e57600080fd5b613c86613635565b82518152613c9660208401613aab565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100613ce58185016137c1565b908201526101208381015190820152610140928301519281019290925250919050565b600060808284031215613d1a57600080fd5b604051613d2681613575565b82518152602083015160018110613d3c57600080fd5b6020820152604083810151908201526060928301519281019290925250919050565b8051600681106137bc57600080fd5b8051600b81106137bc57600080fd5b8051600a81106137bc57600080fd5b60006101608284031215613d9e57600080fd5b613da6613635565b613daf836137ac565b81526020830151602082015260408301516040820152613dd160608401613d5e565b6060820152613de260808401613d6d565b608082015260a083015160a0820152613dfd60c08401613aab565b60c0820152613e0e60e08401613d7c565b60e082015261010083810151908201526101208084015190820152610140928301519281019290925250919050565b600060033d1115613e565760046000803e5060005160e01c5b90565b600060443d1015613e675790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715613e9657505050505090565b8285019150815181811115613eae5750505050505090565b843d8701016020828501011115613ec85750505050505090565b613ed76020828601018761359a565b509095945050505050565b6101608101610812828461323d565b600060a08284031215613f0357600080fd5b60405160a081018181106001600160401b0382111715613f2557613f2561355f565b80604052508251815260208301516020820152604083015160408201526060830151606082015260808301516080820152809150509291505056fea26469706673582212200c4a2fe849225a888742e3818869f88205752b73405b13b1f5939051e3b7e2a164736f6c634300080a0033";

export class DarkForestGetters__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: DarkForestGettersLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      DarkForestGetters__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: DarkForestGettersLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$773590d194ef7af6149f5cd9ccb8db3ce0\\$__", "g"),
      linkLibraryAddresses["contracts/DarkForestUtils.sol:DarkForestUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DarkForestGetters> {
    return super.deploy(overrides || {}) as Promise<DarkForestGetters>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DarkForestGetters {
    return super.attach(address) as DarkForestGetters;
  }
  connect(signer: Signer): DarkForestGetters__factory {
    return super.connect(signer) as DarkForestGetters__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarkForestGettersInterface {
    return new utils.Interface(_abi) as DarkForestGettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarkForestGetters {
    return new Contract(address, _abi, signerOrProvider) as DarkForestGetters;
  }
}

export interface DarkForestGettersLibraryAddresses {
  ["contracts/DarkForestUtils.sol:DarkForestUtils"]: string;
}
