"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DarkForestLazyUpdate__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "currentTimestamp",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "range",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "speed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "defense",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "population",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silver",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "planetLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.PlanetType",
                        name: "planetType",
                        type: "DarkForestTypes.PlanetType",
                    },
                    {
                        internalType: "bool",
                        name: "isHomePlanet",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.Planet",
                name: "planet",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isInitialized",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "createdAt",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdated",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "perlin",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.SpaceType",
                        name: "spaceType",
                        type: "DarkForestTypes.SpaceType",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState0",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState1",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState2",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "hatLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasTriedFindingArtifact",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "prospectedBlockNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "destroyed",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.PlanetExtendedInfo",
                name: "planetExtendedInfo",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.PlanetEventType",
                        name: "eventType",
                        type: "DarkForestTypes.PlanetEventType",
                    },
                    {
                        internalType: "uint256",
                        name: "timeTrigger",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "timeAdded",
                        type: "uint256",
                    },
                ],
                internalType: "struct DarkForestTypes.PlanetEventMetadata[]",
                name: "events",
                type: "tuple[]",
            },
        ],
        name: "applyPendingEvents",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "range",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "speed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "defense",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "population",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silver",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "planetLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.PlanetType",
                        name: "planetType",
                        type: "DarkForestTypes.PlanetType",
                    },
                    {
                        internalType: "bool",
                        name: "isHomePlanet",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.Planet",
                name: "",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isInitialized",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "createdAt",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdated",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "perlin",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.SpaceType",
                        name: "spaceType",
                        type: "DarkForestTypes.SpaceType",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState0",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState1",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState2",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "hatLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasTriedFindingArtifact",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "prospectedBlockNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "destroyed",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.PlanetExtendedInfo",
                name: "",
                type: "tuple",
            },
            {
                internalType: "uint256[12]",
                name: "",
                type: "uint256[12]",
            },
            {
                internalType: "uint256[12]",
                name: "",
                type: "uint256[12]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "updateToTime",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "range",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "speed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "defense",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "population",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silver",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "planetLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.PlanetType",
                        name: "planetType",
                        type: "DarkForestTypes.PlanetType",
                    },
                    {
                        internalType: "bool",
                        name: "isHomePlanet",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.Planet",
                name: "planet",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isInitialized",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "createdAt",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdated",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "perlin",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.SpaceType",
                        name: "spaceType",
                        type: "DarkForestTypes.SpaceType",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState0",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState1",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState2",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "hatLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasTriedFindingArtifact",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "prospectedBlockNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "destroyed",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.PlanetExtendedInfo",
                name: "planetExtendedInfo",
                type: "tuple",
            },
        ],
        name: "updatePlanet",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "range",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "speed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "defense",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "population",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "populationGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverCap",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silverGrowth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "silver",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "planetLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.PlanetType",
                        name: "planetType",
                        type: "DarkForestTypes.PlanetType",
                    },
                    {
                        internalType: "bool",
                        name: "isHomePlanet",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.Planet",
                name: "",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isInitialized",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "createdAt",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdated",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "perlin",
                        type: "uint256",
                    },
                    {
                        internalType: "enum DarkForestTypes.SpaceType",
                        name: "spaceType",
                        type: "DarkForestTypes.SpaceType",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState0",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState1",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "upgradeState2",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "hatLevel",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasTriedFindingArtifact",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "prospectedBlockNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "destroyed",
                        type: "bool",
                    },
                ],
                internalType: "struct DarkForestTypes.PlanetExtendedInfo",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x611c5061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80636100b50b1461005b578063630cf4331461008557806386b714e2146100965780639090ad4e1461009d575b600080fd5b61006e6100693660046117fc565b6100c0565b60405161007c9291906119ac565b60405180910390f35b60015b60405190815260200161007c565b6001610088565b6100b06100ab3660046119c9565b610112565b60405161007c9493929190611b0b565b6100c8611479565b6100d06114fb565b6100db85858561044f565b600184610160015160048111156100f4576100f461183c565b14156101055761010585858561057e565b5050604081019290925291565b61011a611479565b6101226114fb565b61012a611573565b610132611573565b61013a611573565b610142611573565b6000806000805b8a51158061015957508b61016001515b156101635761043a565b600019915060005b8b5181101561023b57828c828151811061018757610187611b4d565b602002602001015160400151101561022957600160005b868110156101fc578d83815181106101b8576101b8611b4d565b6020026020010151600001518982600c81106101d6576101d6611b4d565b602002015114156101ea57600091506101fc565b806101f481611b79565b91505061019e565b508015610227578c828151811061021557610215611b4d565b60200260200101516040015193508192505b505b8061023381611b79565b91505061016b565b508d8b828151811061024f5761024f611b4d565b6020026020010151604001511115801561026b57508160001914155b15610431576102988b828151811061028557610285611b4d565b6020026020010151604001518e8e6100c0565b909d509b5060008b82815181106102b1576102b1611b4d565b60200260200101516020015160008111156102ce576102ce61183c565b1415610431578a81815181106102e6576102e6611b4d565b6020026020010151600001518685806102fe90611b79565b9650600c811061031057610310611b4d565b602002015260006104018e600160930160008f868151811061033457610334611b4d565b6020908102919091018101515182528181019290925260409081016000208151610160810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600380820154606084015260048201546080840152600582015460a0840152600682015460c0840152600782015460e0840152600882015461010084019160ff909116908111156103d3576103d361183c565b60038111156103e4576103e461183c565b815260200160098201548152602001600a8201548152505061068d565b9e509050801561042f5780868561041781611b79565b9650600c811061042957610429611b4d565b60200201525b505b8d821115610149575b509a9c999b5092995090979650505050505050565b81516001600160a01b031661046357505050565b600061048361047185610823565b61047e8460400151610823565b610841565b905060006104916001610823565b9050600061050d6105076104e16104dc6104ca6104c46104b260031961087c565b6104bf8c60c00151610823565b6108a8565b886108a8565b6104d78a60a00151610823565b6108de565b610936565b6104bf6105016104f48a60a00151610823565b6104d78b60800151610823565b86610841565b83610991565b905061052d6105286105228760a00151610823565b836108de565b6109c4565b67ffffffffffffffff166080860152600485610160015160048111156105555761055561183c565b1415610576578460a00151856080015111156105765760a085015160808601525b505050505050565b600182610160015160048111156105975761059761183c565b146106025760405162461bcd60e51b815260206004820152603160248201527f43616e206f6e6c79207570646174652073696c766572206f6e2073696c766572604482015270081c1c9bd91d58da5b99c81c1b185b995d607a1b606482015260840160405180910390fd5b81516001600160a01b031661061657505050565b8160e0015182610120015110156106885760008160400151846106399190611b94565b905060008184610100015161064e9190611bab565b905060008460e00151905060008286610120015161066c9190611bca565b905080821061067b578061067d565b815b610120870152505050505b505050565b6000610697611479565b83600001516001600160a01b031683602001516001600160a01b031614156106d757826080015184608001516106cd9190611bca565b60808501526107a5565b600383610100015160038111156106f0576106f061183c565b14156106fb576107a5565b60608401516080840151610710906064611bab565b61071a9190611bf8565b84608001511115610753576060840151608084015161073a906064611bab565b6107449190611bf8565b84608001516106cd9190611b94565b60208301516001600160a01b031684526060840151608085015160649161077991611bab565b6107839190611bf8565b83608001516107929190611b94565b608085018190526107a557600160808501525b600484610160015160048111156107be576107be61183c565b14156107df578360a00151846080015111156107df5760a084015160808501525b60e084015160a08401516101208601516000916107fb91611bca565b905080821061080a578061080c565b815b610120878101919091529490940151959350505050565b6000677fffffffffffffff82111561083a57600080fd5b5060401b90565b6000600f82810b9084900b0360016001607f1b0319811280159061086c575060016001607f1b038113155b61087557600080fd5b9392505050565b6000677fffffffffffffff19821215801561089f5750677fffffffffffffff8213155b61083a57600080fd5b6000600f83810b9083900b0260401d60016001607f1b0319811280159061086c575060016001607f1b0381131561087557600080fd5b600081600f0b600014156108f157600080fd5b600082600f0b604085600f0b901b8161090c5761090c611be2565b05905060016001607f1b0319811280159061086c575060016001607f1b0381131561087557600080fd5b6000600160461b82600f0b1261094b57600080fd5b683fffffffffffffffff1982600f0b121561096857506000919050565b61098b608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d6109e0565b92915050565b6000600f83810b9083900b0160016001607f1b0319811280159061086c575060016001607f1b0381131561087557600080fd5b60008082600f0b12156109d657600080fd5b50600f0b60401d90565b6000600160461b82600f0b126109f557600080fd5b683fffffffffffffffff1982600f0b1215610a1257506000919050565b6001607f1b60006001603f1b8416600f0b1315610a405770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b6000836001603e1b16600f0b1315610a69577001306fe0a31b7152de8d5a46305c85edec0260801c5b6000836001603d1b16600f0b1315610a92577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b6000836001603c1b16600f0b1315610abb5770010b5586cf9890f6298b92b71842a983630260801c5b6000836001603b1b16600f0b1315610ae4577001059b0d31585743ae7c548eb68ca417fd0260801c5b6000836001603a1b16600f0b1315610b0d57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b600083600160391b16600f0b1315610b365770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600083600160381b16600f0b1315610b5f57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b1315610b8b5770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b1315610bb7577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b1315610be357700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315610c0f577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b1315610c3b57700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b1315610c675770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315610c93577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b1315610cbf5770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b1315610cea577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b1315610d1557700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b1315610d405770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b1315610d6b57700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b1315610d965770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315610dc1577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b1315610dec57700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b1315610e17577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b1315610e4157700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b1315610e6b5770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b1315610e95577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b1315610ebf5770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b1315610ee9577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b1315610f1357700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b1315610f3d5770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b1315610f6757700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b1315610f905770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b1315610fb9577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b1315610fe257700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b131561100b577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561103457700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b131561105d5770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315611086577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156110af5770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156110d7577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156110ff57700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156111275770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561114f57700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b13156111775770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b131561119f577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b13156111c757700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156111ef577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b131561121657700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b131561123d5770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315611264577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b131561128b5770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b13156112b2577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156112d957700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156113005770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b131561132757700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b131561134d5770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315611373577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561139957700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b13156113bf577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156113e557700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b131561140b5770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315611431577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b13156114575770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b0381111561098b57600080fd5b604051806101a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060048111156114ee576114ee61183c565b8152600060209091015290565b604051806101800160405280600015158152602001600081526020016000815260200160008152602001600060038111156115385761153861183c565b815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000151581525090565b604051806101800160405280600c906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff811182821017156115cc576115cc611592565b60405290565b604051610180810167ffffffffffffffff811182821017156115cc576115cc611592565b6040516080810167ffffffffffffffff811182821017156115cc576115cc611592565b604051601f8201601f1916810167ffffffffffffffff8111828210171561164257611642611592565b604052919050565b80356001600160a01b038116811461166157600080fd5b919050565b80356005811061166157600080fd5b8035801515811461166157600080fd5b60006101a0828403121561169857600080fd5b6116a06115a8565b90506116ab8261164a565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120808301358183015250610140808301358183015250610160611725818401611666565b90820152610180611737838201611675565b9082015292915050565b80356004811061166157600080fd5b6000610180828403121561176357600080fd5b61176b6115d2565b905061177682611675565b81526020820135602082015260408201356040820152606082013560608201526117a260808301611741565b608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101206117df818401611675565b908201526101408281013590820152610160611737818401611675565b6000806000610340848603121561181257600080fd5b833592506118238560208601611685565b9150611833856101c08601611750565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b600581106118625761186261183c565b9052565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201518184015250610140808201518184015250610160808201516118f082850182611852565b505061018081810151801515848301525b50505050565b600481106118625761186261183c565b805115158252602081015160208301526040810151604083015260608101516060830152608081015161194d6080840182611907565b5060a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015161198c8285018215159052565b505061014081810151908301526101608082015180151582850152611901565b61032081016119bb8285611866565b6108756101a0830184611917565b60008060008061036085870312156119e057600080fd5b8435935060206119f287828801611685565b9350611a02876101c08801611750565b925061034086013567ffffffffffffffff80821115611a2057600080fd5b818801915088601f830112611a3457600080fd5b813581811115611a4657611a46611592565b611a54848260051b01611619565b818152848101925060079190911b83018401908a821115611a7457600080fd5b928401925b81841015611ad9576080848c031215611a925760008081fd5b611a9a6115f6565b843581528585013560018110611ab05760008081fd5b818701526040858101359082015260608086013590820152835260809093019291840191611a79565b979a9699509497505050505050565b8060005b600c811015611901578151845260209384019390910190600101611aec565b6106208101611b1a8287611866565b611b286101a0830186611917565b611b36610320830185611ae8565b611b446104a0830184611ae8565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b8d57611b8d611b63565b5060010190565b600082821015611ba657611ba6611b63565b500390565b6000816000190483118215151615611bc557611bc5611b63565b500290565b60008219821115611bdd57611bdd611b63565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611c1557634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a2aedf41d3622e894bffc816aff266718e7b75454276f7efcba9a3f552a7337764736f6c634300080a0033";
class DarkForestLazyUpdate__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DarkForestLazyUpdate__factory = DarkForestLazyUpdate__factory;
DarkForestLazyUpdate__factory.bytecode = _bytecode;
DarkForestLazyUpdate__factory.abi = _abi;
