/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { FunctionFragment, Result } from "@ethersproject/abi";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  CallOverrides,
  ContractTransaction,
  ethers,
  Overrides,
  PopulatedTransaction,
  Signer,
} from "ethers";
import type { TypedEvent, TypedEventFilter, TypedListener } from "./common";

interface DarkForestGettersInterface extends ethers.utils.Interface {
  functions: {
    "bulkGetArtifacts(uint256,uint256)": FunctionFragment;
    "bulkGetArtifactsByIds(uint256[])": FunctionFragment;
    "bulkGetPlanetArrivals(uint256,uint256)": FunctionFragment;
    "bulkGetPlanetArrivalsByIds(uint256[])": FunctionFragment;
    "bulkGetPlanetArtifacts(uint256[])": FunctionFragment;
    "bulkGetPlanetIds(uint256,uint256)": FunctionFragment;
    "bulkGetPlanets(uint256,uint256)": FunctionFragment;
    "bulkGetPlanetsByIds(uint256[])": FunctionFragment;
    "bulkGetPlanetsDataByIds(uint256[])": FunctionFragment;
    "bulkGetPlanetsExtendedInfo(uint256,uint256)": FunctionFragment;
    "bulkGetPlanetsExtendedInfoByIds(uint256[])": FunctionFragment;
    "bulkGetPlayerIds(uint256,uint256)": FunctionFragment;
    "bulkGetPlayers(uint256,uint256)": FunctionFragment;
    "bulkGetRevealedCoordsByIds(uint256[])": FunctionFragment;
    "bulkGetRevealedPlanetIds(uint256,uint256)": FunctionFragment;
    "bulkGetVoyagesByIds(uint256[])": FunctionFragment;
    "doesArtifactExist(uint256)": FunctionFragment;
    "getArtifactById(uint256)": FunctionFragment;
    "getArtifactsOnPlanet(uint256)": FunctionFragment;
    "getDefaultStats()": FunctionFragment;
    "getPlanetArrivals(uint256)": FunctionFragment;
    "getPlanetEvent(uint256,uint256)": FunctionFragment;
    "getPlayerArtifactIds(address)": FunctionFragment;
    "initialize(address,address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "bulkGetArtifacts",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetArtifactsByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetArrivals",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetArrivalsByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetArtifacts",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetIds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanets",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetsByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetsDataByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetsExtendedInfo",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlanetsExtendedInfoByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlayerIds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetPlayers",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetRevealedCoordsByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetRevealedPlanetIds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetVoyagesByIds",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "doesArtifactExist",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArtifactById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArtifactsOnPlanet",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultStats",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPlanetArrivals",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPlanetEvent",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPlayerArtifactIds",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "bulkGetArtifacts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetArtifactsByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetArrivals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetArrivalsByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetArtifacts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetsByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetsDataByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetsExtendedInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlanetsExtendedInfoByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlayerIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetPlayers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetRevealedCoordsByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetRevealedPlanetIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetVoyagesByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "doesArtifactExist",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArtifactById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArtifactsOnPlanet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultStats",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPlanetArrivals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPlanetEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPlayerArtifactIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;

  events: {};
}

export class DarkForestGetters extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: DarkForestGettersInterface;

  functions: {
    bulkGetArtifacts(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[]
      ] & {
        ret: ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[];
      }
    >;

    bulkGetArtifactsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[]
      ] & {
        ret: ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[];
      }
    >;

    bulkGetPlanetArrivals(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          player: string;
          fromPlanet: BigNumber;
          toPlanet: BigNumber;
          popArriving: BigNumber;
          silverMoved: BigNumber;
          departureTime: BigNumber;
          arrivalTime: BigNumber;
          arrivalType: number;
          carriedArtifactId: BigNumber;
          distance: BigNumber;
        })[][]
      ]
    >;

    bulkGetPlanetArrivalsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          player: string;
          fromPlanet: BigNumber;
          toPlanet: BigNumber;
          popArriving: BigNumber;
          silverMoved: BigNumber;
          departureTime: BigNumber;
          arrivalTime: BigNumber;
          arrivalType: number;
          carriedArtifactId: BigNumber;
          distance: BigNumber;
        })[][]
      ]
    >;

    bulkGetPlanetArtifacts(
      planetIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[][]
      ]
    >;

    bulkGetPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { ret: BigNumber[] }>;

    bulkGetPlanets(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        })[]
      ] & {
        ret: ([
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        })[];
      }
    >;

    bulkGetPlanetsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        })[]
      ] & {
        ret: ([
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        })[];
      }
    >;

    bulkGetPlanetsDataByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            boolean
          ] & {
            owner: string;
            range: BigNumber;
            speed: BigNumber;
            defense: BigNumber;
            population: BigNumber;
            populationCap: BigNumber;
            populationGrowth: BigNumber;
            silverCap: BigNumber;
            silverGrowth: BigNumber;
            silver: BigNumber;
            planetLevel: BigNumber;
            planetType: number;
            isHomePlanet: boolean;
          },
          [
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            boolean
          ] & {
            isInitialized: boolean;
            createdAt: BigNumber;
            lastUpdated: BigNumber;
            perlin: BigNumber;
            spaceType: number;
            upgradeState0: BigNumber;
            upgradeState1: BigNumber;
            upgradeState2: BigNumber;
            hatLevel: BigNumber;
            hasTriedFindingArtifact: boolean;
            prospectedBlockNumber: BigNumber;
            destroyed: boolean;
          },
          [BigNumber, BigNumber, BigNumber, string] & {
            locationId: BigNumber;
            x: BigNumber;
            y: BigNumber;
            revealer: string;
          }
        ] & {
          planet: [
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            boolean
          ] & {
            owner: string;
            range: BigNumber;
            speed: BigNumber;
            defense: BigNumber;
            population: BigNumber;
            populationCap: BigNumber;
            populationGrowth: BigNumber;
            silverCap: BigNumber;
            silverGrowth: BigNumber;
            silver: BigNumber;
            planetLevel: BigNumber;
            planetType: number;
            isHomePlanet: boolean;
          };
          info: [
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            boolean
          ] & {
            isInitialized: boolean;
            createdAt: BigNumber;
            lastUpdated: BigNumber;
            perlin: BigNumber;
            spaceType: number;
            upgradeState0: BigNumber;
            upgradeState1: BigNumber;
            upgradeState2: BigNumber;
            hatLevel: BigNumber;
            hasTriedFindingArtifact: boolean;
            prospectedBlockNumber: BigNumber;
            destroyed: boolean;
          };
          revealedCoords: [BigNumber, BigNumber, BigNumber, string] & {
            locationId: BigNumber;
            x: BigNumber;
            y: BigNumber;
            revealer: string;
          };
        })[]
      ] & {
        ret: ([
          [
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            boolean
          ] & {
            owner: string;
            range: BigNumber;
            speed: BigNumber;
            defense: BigNumber;
            population: BigNumber;
            populationCap: BigNumber;
            populationGrowth: BigNumber;
            silverCap: BigNumber;
            silverGrowth: BigNumber;
            silver: BigNumber;
            planetLevel: BigNumber;
            planetType: number;
            isHomePlanet: boolean;
          },
          [
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            boolean
          ] & {
            isInitialized: boolean;
            createdAt: BigNumber;
            lastUpdated: BigNumber;
            perlin: BigNumber;
            spaceType: number;
            upgradeState0: BigNumber;
            upgradeState1: BigNumber;
            upgradeState2: BigNumber;
            hatLevel: BigNumber;
            hasTriedFindingArtifact: boolean;
            prospectedBlockNumber: BigNumber;
            destroyed: boolean;
          },
          [BigNumber, BigNumber, BigNumber, string] & {
            locationId: BigNumber;
            x: BigNumber;
            y: BigNumber;
            revealer: string;
          }
        ] & {
          planet: [
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            boolean
          ] & {
            owner: string;
            range: BigNumber;
            speed: BigNumber;
            defense: BigNumber;
            population: BigNumber;
            populationCap: BigNumber;
            populationGrowth: BigNumber;
            silverCap: BigNumber;
            silverGrowth: BigNumber;
            silver: BigNumber;
            planetLevel: BigNumber;
            planetType: number;
            isHomePlanet: boolean;
          };
          info: [
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            boolean
          ] & {
            isInitialized: boolean;
            createdAt: BigNumber;
            lastUpdated: BigNumber;
            perlin: BigNumber;
            spaceType: number;
            upgradeState0: BigNumber;
            upgradeState1: BigNumber;
            upgradeState2: BigNumber;
            hatLevel: BigNumber;
            hasTriedFindingArtifact: boolean;
            prospectedBlockNumber: BigNumber;
            destroyed: boolean;
          };
          revealedCoords: [BigNumber, BigNumber, BigNumber, string] & {
            locationId: BigNumber;
            x: BigNumber;
            y: BigNumber;
            revealer: string;
          };
        })[];
      }
    >;

    bulkGetPlanetsExtendedInfo(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        })[]
      ] & {
        ret: ([
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        })[];
      }
    >;

    bulkGetPlanetsExtendedInfoByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        })[]
      ] & {
        ret: ([
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        })[];
      }
    >;

    bulkGetPlayerIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { ret: string[] }>;

    bulkGetPlayers(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([boolean, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
          isInitialized: boolean;
          player: string;
          initTimestamp: BigNumber;
          homePlanetId: BigNumber;
          lastRevealTimestamp: BigNumber;
          score: BigNumber;
        })[]
      ] & {
        ret: ([boolean, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
          isInitialized: boolean;
          player: string;
          initTimestamp: BigNumber;
          homePlanetId: BigNumber;
          lastRevealTimestamp: BigNumber;
          score: BigNumber;
        })[];
      }
    >;

    bulkGetRevealedCoordsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, BigNumber, BigNumber, string] & {
          locationId: BigNumber;
          x: BigNumber;
          y: BigNumber;
          revealer: string;
        })[]
      ] & {
        ret: ([BigNumber, BigNumber, BigNumber, string] & {
          locationId: BigNumber;
          x: BigNumber;
          y: BigNumber;
          revealer: string;
        })[];
      }
    >;

    bulkGetRevealedPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { ret: BigNumber[] }>;

    bulkGetVoyagesByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          player: string;
          fromPlanet: BigNumber;
          toPlanet: BigNumber;
          popArriving: BigNumber;
          silverMoved: BigNumber;
          departureTime: BigNumber;
          arrivalTime: BigNumber;
          arrivalType: number;
          carriedArtifactId: BigNumber;
          distance: BigNumber;
        })[]
      ] & {
        ret: ([
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          player: string;
          fromPlanet: BigNumber;
          toPlanet: BigNumber;
          popArriving: BigNumber;
          silverMoved: BigNumber;
          departureTime: BigNumber;
          arrivalTime: BigNumber;
          arrivalType: number;
          carriedArtifactId: BigNumber;
          distance: BigNumber;
        })[];
      }
    >;

    doesArtifactExist(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getArtifactById(
      artifactId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        }
      ] & {
        ret: [
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        };
      }
    >;

    getArtifactsOnPlanet(
      locationId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[]
      ] & {
        ret: ([
          [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          },
          string,
          BigNumber,
          BigNumber
        ] & {
          artifact: [
            boolean,
            BigNumber,
            BigNumber,
            number,
            number,
            BigNumber,
            string,
            number,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            isInitialized: boolean;
            id: BigNumber;
            planetDiscoveredOn: BigNumber;
            rarity: number;
            planetBiome: number;
            mintedAtTimestamp: BigNumber;
            discoverer: string;
            artifactType: number;
            lastActivated: BigNumber;
            lastDeactivated: BigNumber;
            wormholeTo: BigNumber;
          };
          upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          timeDelayedUpgrade: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            popCapMultiplier: BigNumber;
            popGroMultiplier: BigNumber;
            rangeMultiplier: BigNumber;
            speedMultiplier: BigNumber;
            defMultiplier: BigNumber;
          };
          owner: string;
          locationId: BigNumber;
          voyageId: BigNumber;
        })[];
      }
    >;

    getDefaultStats(
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          label: string;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          silverGrowth: BigNumber;
          silverCap: BigNumber;
          barbarianPercentage: BigNumber;
        })[]
      ]
    >;

    getPlanetArrivals(
      _location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          player: string;
          fromPlanet: BigNumber;
          toPlanet: BigNumber;
          popArriving: BigNumber;
          silverMoved: BigNumber;
          departureTime: BigNumber;
          arrivalTime: BigNumber;
          arrivalType: number;
          carriedArtifactId: BigNumber;
          distance: BigNumber;
        })[]
      ] & {
        ret: ([
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          player: string;
          fromPlanet: BigNumber;
          toPlanet: BigNumber;
          popArriving: BigNumber;
          silverMoved: BigNumber;
          departureTime: BigNumber;
          arrivalTime: BigNumber;
          arrivalType: number;
          carriedArtifactId: BigNumber;
          distance: BigNumber;
        })[];
      }
    >;

    getPlanetEvent(
      locationId: BigNumberish,
      idx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, number, BigNumber, BigNumber] & {
          id: BigNumber;
          eventType: number;
          timeTrigger: BigNumber;
          timeAdded: BigNumber;
        }
      ]
    >;

    getPlayerArtifactIds(
      playerId: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    initialize(
      _adminAddress: string,
      _coreContractAddress: string,
      _tokensAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  bulkGetArtifacts(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      string,
      BigNumber,
      BigNumber
    ] & {
      artifact: [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      };
      upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      timeDelayedUpgrade: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      owner: string;
      locationId: BigNumber;
      voyageId: BigNumber;
    })[]
  >;

  bulkGetArtifactsByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      string,
      BigNumber,
      BigNumber
    ] & {
      artifact: [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      };
      upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      timeDelayedUpgrade: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      owner: string;
      locationId: BigNumber;
      voyageId: BigNumber;
    })[]
  >;

  bulkGetPlanetArrivals(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber
    ] & {
      id: BigNumber;
      player: string;
      fromPlanet: BigNumber;
      toPlanet: BigNumber;
      popArriving: BigNumber;
      silverMoved: BigNumber;
      departureTime: BigNumber;
      arrivalTime: BigNumber;
      arrivalType: number;
      carriedArtifactId: BigNumber;
      distance: BigNumber;
    })[][]
  >;

  bulkGetPlanetArrivalsByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber
    ] & {
      id: BigNumber;
      player: string;
      fromPlanet: BigNumber;
      toPlanet: BigNumber;
      popArriving: BigNumber;
      silverMoved: BigNumber;
      departureTime: BigNumber;
      arrivalTime: BigNumber;
      arrivalType: number;
      carriedArtifactId: BigNumber;
      distance: BigNumber;
    })[][]
  >;

  bulkGetPlanetArtifacts(
    planetIds: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      string,
      BigNumber,
      BigNumber
    ] & {
      artifact: [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      };
      upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      timeDelayedUpgrade: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      owner: string;
      locationId: BigNumber;
      voyageId: BigNumber;
    })[][]
  >;

  bulkGetPlanetIds(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  bulkGetPlanets(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      boolean
    ] & {
      owner: string;
      range: BigNumber;
      speed: BigNumber;
      defense: BigNumber;
      population: BigNumber;
      populationCap: BigNumber;
      populationGrowth: BigNumber;
      silverCap: BigNumber;
      silverGrowth: BigNumber;
      silver: BigNumber;
      planetLevel: BigNumber;
      planetType: number;
      isHomePlanet: boolean;
    })[]
  >;

  bulkGetPlanetsByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      boolean
    ] & {
      owner: string;
      range: BigNumber;
      speed: BigNumber;
      defense: BigNumber;
      population: BigNumber;
      populationCap: BigNumber;
      populationGrowth: BigNumber;
      silverCap: BigNumber;
      silverGrowth: BigNumber;
      silver: BigNumber;
      planetLevel: BigNumber;
      planetType: number;
      isHomePlanet: boolean;
    })[]
  >;

  bulkGetPlanetsDataByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      [
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        boolean
      ] & {
        owner: string;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        population: BigNumber;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        silverCap: BigNumber;
        silverGrowth: BigNumber;
        silver: BigNumber;
        planetLevel: BigNumber;
        planetType: number;
        isHomePlanet: boolean;
      },
      [
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        BigNumber,
        boolean
      ] & {
        isInitialized: boolean;
        createdAt: BigNumber;
        lastUpdated: BigNumber;
        perlin: BigNumber;
        spaceType: number;
        upgradeState0: BigNumber;
        upgradeState1: BigNumber;
        upgradeState2: BigNumber;
        hatLevel: BigNumber;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumber;
        destroyed: boolean;
      },
      [BigNumber, BigNumber, BigNumber, string] & {
        locationId: BigNumber;
        x: BigNumber;
        y: BigNumber;
        revealer: string;
      }
    ] & {
      planet: [
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        boolean
      ] & {
        owner: string;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        population: BigNumber;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        silverCap: BigNumber;
        silverGrowth: BigNumber;
        silver: BigNumber;
        planetLevel: BigNumber;
        planetType: number;
        isHomePlanet: boolean;
      };
      info: [
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        BigNumber,
        boolean
      ] & {
        isInitialized: boolean;
        createdAt: BigNumber;
        lastUpdated: BigNumber;
        perlin: BigNumber;
        spaceType: number;
        upgradeState0: BigNumber;
        upgradeState1: BigNumber;
        upgradeState2: BigNumber;
        hatLevel: BigNumber;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumber;
        destroyed: boolean;
      };
      revealedCoords: [BigNumber, BigNumber, BigNumber, string] & {
        locationId: BigNumber;
        x: BigNumber;
        y: BigNumber;
        revealer: string;
      };
    })[]
  >;

  bulkGetPlanetsExtendedInfo(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      boolean,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      BigNumber,
      boolean
    ] & {
      isInitialized: boolean;
      createdAt: BigNumber;
      lastUpdated: BigNumber;
      perlin: BigNumber;
      spaceType: number;
      upgradeState0: BigNumber;
      upgradeState1: BigNumber;
      upgradeState2: BigNumber;
      hatLevel: BigNumber;
      hasTriedFindingArtifact: boolean;
      prospectedBlockNumber: BigNumber;
      destroyed: boolean;
    })[]
  >;

  bulkGetPlanetsExtendedInfoByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      boolean,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      BigNumber,
      boolean
    ] & {
      isInitialized: boolean;
      createdAt: BigNumber;
      lastUpdated: BigNumber;
      perlin: BigNumber;
      spaceType: number;
      upgradeState0: BigNumber;
      upgradeState1: BigNumber;
      upgradeState2: BigNumber;
      hatLevel: BigNumber;
      hasTriedFindingArtifact: boolean;
      prospectedBlockNumber: BigNumber;
      destroyed: boolean;
    })[]
  >;

  bulkGetPlayerIds(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  bulkGetPlayers(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([boolean, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
      isInitialized: boolean;
      player: string;
      initTimestamp: BigNumber;
      homePlanetId: BigNumber;
      lastRevealTimestamp: BigNumber;
      score: BigNumber;
    })[]
  >;

  bulkGetRevealedCoordsByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber, BigNumber, string] & {
      locationId: BigNumber;
      x: BigNumber;
      y: BigNumber;
      revealer: string;
    })[]
  >;

  bulkGetRevealedPlanetIds(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  bulkGetVoyagesByIds(
    ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber
    ] & {
      id: BigNumber;
      player: string;
      fromPlanet: BigNumber;
      toPlanet: BigNumber;
      popArriving: BigNumber;
      silverMoved: BigNumber;
      departureTime: BigNumber;
      arrivalTime: BigNumber;
      arrivalType: number;
      carriedArtifactId: BigNumber;
      distance: BigNumber;
    })[]
  >;

  doesArtifactExist(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getArtifactById(
    artifactId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      string,
      BigNumber,
      BigNumber
    ] & {
      artifact: [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      };
      upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      timeDelayedUpgrade: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      owner: string;
      locationId: BigNumber;
      voyageId: BigNumber;
    }
  >;

  getArtifactsOnPlanet(
    locationId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      },
      string,
      BigNumber,
      BigNumber
    ] & {
      artifact: [
        boolean,
        BigNumber,
        BigNumber,
        number,
        number,
        BigNumber,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isInitialized: boolean;
        id: BigNumber;
        planetDiscoveredOn: BigNumber;
        rarity: number;
        planetBiome: number;
        mintedAtTimestamp: BigNumber;
        discoverer: string;
        artifactType: number;
        lastActivated: BigNumber;
        lastDeactivated: BigNumber;
        wormholeTo: BigNumber;
      };
      upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      timeDelayedUpgrade: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        popCapMultiplier: BigNumber;
        popGroMultiplier: BigNumber;
        rangeMultiplier: BigNumber;
        speedMultiplier: BigNumber;
        defMultiplier: BigNumber;
      };
      owner: string;
      locationId: BigNumber;
      voyageId: BigNumber;
    })[]
  >;

  getDefaultStats(
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      label: string;
      populationCap: BigNumber;
      populationGrowth: BigNumber;
      range: BigNumber;
      speed: BigNumber;
      defense: BigNumber;
      silverGrowth: BigNumber;
      silverCap: BigNumber;
      barbarianPercentage: BigNumber;
    })[]
  >;

  getPlanetArrivals(
    _location: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber
    ] & {
      id: BigNumber;
      player: string;
      fromPlanet: BigNumber;
      toPlanet: BigNumber;
      popArriving: BigNumber;
      silverMoved: BigNumber;
      departureTime: BigNumber;
      arrivalTime: BigNumber;
      arrivalType: number;
      carriedArtifactId: BigNumber;
      distance: BigNumber;
    })[]
  >;

  getPlanetEvent(
    locationId: BigNumberish,
    idx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, number, BigNumber, BigNumber] & {
      id: BigNumber;
      eventType: number;
      timeTrigger: BigNumber;
      timeAdded: BigNumber;
    }
  >;

  getPlayerArtifactIds(
    playerId: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  initialize(
    _adminAddress: string,
    _coreContractAddress: string,
    _tokensAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    bulkGetArtifacts(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        string,
        BigNumber,
        BigNumber
      ] & {
        artifact: [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        };
        upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        timeDelayedUpgrade: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        owner: string;
        locationId: BigNumber;
        voyageId: BigNumber;
      })[]
    >;

    bulkGetArtifactsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        string,
        BigNumber,
        BigNumber
      ] & {
        artifact: [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        };
        upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        timeDelayedUpgrade: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        owner: string;
        locationId: BigNumber;
        voyageId: BigNumber;
      })[]
    >;

    bulkGetPlanetArrivals(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        player: string;
        fromPlanet: BigNumber;
        toPlanet: BigNumber;
        popArriving: BigNumber;
        silverMoved: BigNumber;
        departureTime: BigNumber;
        arrivalTime: BigNumber;
        arrivalType: number;
        carriedArtifactId: BigNumber;
        distance: BigNumber;
      })[][]
    >;

    bulkGetPlanetArrivalsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        player: string;
        fromPlanet: BigNumber;
        toPlanet: BigNumber;
        popArriving: BigNumber;
        silverMoved: BigNumber;
        departureTime: BigNumber;
        arrivalTime: BigNumber;
        arrivalType: number;
        carriedArtifactId: BigNumber;
        distance: BigNumber;
      })[][]
    >;

    bulkGetPlanetArtifacts(
      planetIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        string,
        BigNumber,
        BigNumber
      ] & {
        artifact: [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        };
        upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        timeDelayedUpgrade: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        owner: string;
        locationId: BigNumber;
        voyageId: BigNumber;
      })[][]
    >;

    bulkGetPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    bulkGetPlanets(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        boolean
      ] & {
        owner: string;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        population: BigNumber;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        silverCap: BigNumber;
        silverGrowth: BigNumber;
        silver: BigNumber;
        planetLevel: BigNumber;
        planetType: number;
        isHomePlanet: boolean;
      })[]
    >;

    bulkGetPlanetsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        boolean
      ] & {
        owner: string;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        population: BigNumber;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        silverCap: BigNumber;
        silverGrowth: BigNumber;
        silver: BigNumber;
        planetLevel: BigNumber;
        planetType: number;
        isHomePlanet: boolean;
      })[]
    >;

    bulkGetPlanetsDataByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        [
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        },
        [
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        },
        [BigNumber, BigNumber, BigNumber, string] & {
          locationId: BigNumber;
          x: BigNumber;
          y: BigNumber;
          revealer: string;
        }
      ] & {
        planet: [
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          boolean
        ] & {
          owner: string;
          range: BigNumber;
          speed: BigNumber;
          defense: BigNumber;
          population: BigNumber;
          populationCap: BigNumber;
          populationGrowth: BigNumber;
          silverCap: BigNumber;
          silverGrowth: BigNumber;
          silver: BigNumber;
          planetLevel: BigNumber;
          planetType: number;
          isHomePlanet: boolean;
        };
        info: [
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          boolean
        ] & {
          isInitialized: boolean;
          createdAt: BigNumber;
          lastUpdated: BigNumber;
          perlin: BigNumber;
          spaceType: number;
          upgradeState0: BigNumber;
          upgradeState1: BigNumber;
          upgradeState2: BigNumber;
          hatLevel: BigNumber;
          hasTriedFindingArtifact: boolean;
          prospectedBlockNumber: BigNumber;
          destroyed: boolean;
        };
        revealedCoords: [BigNumber, BigNumber, BigNumber, string] & {
          locationId: BigNumber;
          x: BigNumber;
          y: BigNumber;
          revealer: string;
        };
      })[]
    >;

    bulkGetPlanetsExtendedInfo(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        BigNumber,
        boolean
      ] & {
        isInitialized: boolean;
        createdAt: BigNumber;
        lastUpdated: BigNumber;
        perlin: BigNumber;
        spaceType: number;
        upgradeState0: BigNumber;
        upgradeState1: BigNumber;
        upgradeState2: BigNumber;
        hatLevel: BigNumber;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumber;
        destroyed: boolean;
      })[]
    >;

    bulkGetPlanetsExtendedInfoByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        BigNumber,
        boolean
      ] & {
        isInitialized: boolean;
        createdAt: BigNumber;
        lastUpdated: BigNumber;
        perlin: BigNumber;
        spaceType: number;
        upgradeState0: BigNumber;
        upgradeState1: BigNumber;
        upgradeState2: BigNumber;
        hatLevel: BigNumber;
        hasTriedFindingArtifact: boolean;
        prospectedBlockNumber: BigNumber;
        destroyed: boolean;
      })[]
    >;

    bulkGetPlayerIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    bulkGetPlayers(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([boolean, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
        isInitialized: boolean;
        player: string;
        initTimestamp: BigNumber;
        homePlanetId: BigNumber;
        lastRevealTimestamp: BigNumber;
        score: BigNumber;
      })[]
    >;

    bulkGetRevealedCoordsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, BigNumber, BigNumber, string] & {
        locationId: BigNumber;
        x: BigNumber;
        y: BigNumber;
        revealer: string;
      })[]
    >;

    bulkGetRevealedPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    bulkGetVoyagesByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        player: string;
        fromPlanet: BigNumber;
        toPlanet: BigNumber;
        popArriving: BigNumber;
        silverMoved: BigNumber;
        departureTime: BigNumber;
        arrivalTime: BigNumber;
        arrivalType: number;
        carriedArtifactId: BigNumber;
        distance: BigNumber;
      })[]
    >;

    doesArtifactExist(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getArtifactById(
      artifactId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        string,
        BigNumber,
        BigNumber
      ] & {
        artifact: [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        };
        upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        timeDelayedUpgrade: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        owner: string;
        locationId: BigNumber;
        voyageId: BigNumber;
      }
    >;

    getArtifactsOnPlanet(
      locationId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        },
        string,
        BigNumber,
        BigNumber
      ] & {
        artifact: [
          boolean,
          BigNumber,
          BigNumber,
          number,
          number,
          BigNumber,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isInitialized: boolean;
          id: BigNumber;
          planetDiscoveredOn: BigNumber;
          rarity: number;
          planetBiome: number;
          mintedAtTimestamp: BigNumber;
          discoverer: string;
          artifactType: number;
          lastActivated: BigNumber;
          lastDeactivated: BigNumber;
          wormholeTo: BigNumber;
        };
        upgrade: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        timeDelayedUpgrade: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          popCapMultiplier: BigNumber;
          popGroMultiplier: BigNumber;
          rangeMultiplier: BigNumber;
          speedMultiplier: BigNumber;
          defMultiplier: BigNumber;
        };
        owner: string;
        locationId: BigNumber;
        voyageId: BigNumber;
      })[]
    >;

    getDefaultStats(
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        label: string;
        populationCap: BigNumber;
        populationGrowth: BigNumber;
        range: BigNumber;
        speed: BigNumber;
        defense: BigNumber;
        silverGrowth: BigNumber;
        silverCap: BigNumber;
        barbarianPercentage: BigNumber;
      })[]
    >;

    getPlanetArrivals(
      _location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        player: string;
        fromPlanet: BigNumber;
        toPlanet: BigNumber;
        popArriving: BigNumber;
        silverMoved: BigNumber;
        departureTime: BigNumber;
        arrivalTime: BigNumber;
        arrivalType: number;
        carriedArtifactId: BigNumber;
        distance: BigNumber;
      })[]
    >;

    getPlanetEvent(
      locationId: BigNumberish,
      idx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, number, BigNumber, BigNumber] & {
        id: BigNumber;
        eventType: number;
        timeTrigger: BigNumber;
        timeAdded: BigNumber;
      }
    >;

    getPlayerArtifactIds(
      playerId: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    initialize(
      _adminAddress: string,
      _coreContractAddress: string,
      _tokensAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    bulkGetArtifacts(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetArtifactsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetArrivals(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetArrivalsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetArtifacts(
      planetIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanets(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetsDataByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetsExtendedInfo(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlanetsExtendedInfoByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlayerIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetPlayers(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetRevealedCoordsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetRevealedPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkGetVoyagesByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    doesArtifactExist(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArtifactById(
      artifactId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArtifactsOnPlanet(
      locationId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultStats(overrides?: CallOverrides): Promise<BigNumber>;

    getPlanetArrivals(
      _location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPlanetEvent(
      locationId: BigNumberish,
      idx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPlayerArtifactIds(
      playerId: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _adminAddress: string,
      _coreContractAddress: string,
      _tokensAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    bulkGetArtifacts(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetArtifactsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetArrivals(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetArrivalsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetArtifacts(
      planetIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanets(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetsDataByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetsExtendedInfo(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlanetsExtendedInfoByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlayerIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetPlayers(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetRevealedCoordsByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetRevealedPlanetIds(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkGetVoyagesByIds(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    doesArtifactExist(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArtifactById(
      artifactId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArtifactsOnPlanet(
      locationId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDefaultStats(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPlanetArrivals(
      _location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPlanetEvent(
      locationId: BigNumberish,
      idx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPlayerArtifactIds(
      playerId: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _adminAddress: string,
      _coreContractAddress: string,
      _tokensAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
