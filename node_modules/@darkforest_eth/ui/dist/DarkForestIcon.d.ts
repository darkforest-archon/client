import { Abstract } from '@darkforest_eth/types';
import { LitElement, nothing } from 'lit';
export declare type IconType = Abstract<string, 'IconType'>;
export declare const IconType: {
    readonly Energy: IconType;
    readonly EnergyGrowth: IconType;
    readonly Silver: IconType;
    readonly SilverGrowth: IconType;
    readonly Range: IconType;
    readonly Speed: IconType;
    readonly Defense: IconType;
    readonly Artifact: IconType;
    readonly MaxLevel: IconType;
    readonly Pirates: IconType;
    readonly SilverProd: IconType;
    readonly RankOne: IconType;
    readonly RankTwo: IconType;
    readonly RankThree: IconType;
    readonly RankFour: IconType;
    readonly RankMax: IconType;
    readonly Target: IconType;
    readonly Play: IconType;
    readonly Pause: IconType;
    readonly Withdraw: IconType;
    readonly Activate: IconType;
    readonly Deactivate: IconType;
    readonly Deposit: IconType;
    readonly Broadcast: IconType;
    readonly Hat: IconType;
    readonly Help: IconType;
    readonly Leaderboard: IconType;
    readonly Lock: IconType;
    readonly PlanetDex: IconType;
    readonly Planet: IconType;
    readonly Plugin: IconType;
    readonly Settings: IconType;
    readonly Share: IconType;
    readonly Twitter: IconType;
    readonly Upgrade: IconType;
    readonly RightArrow: IconType;
};
export declare class DarkForestIcon extends LitElement {
    static tagName: string;
    static styles: import("lit").CSSResult;
    static properties: {
        type: {
            type: StringConstructor;
        };
    };
    type?: IconType;
    render(): import("lit-html").TemplateResult<2> | typeof nothing;
}
